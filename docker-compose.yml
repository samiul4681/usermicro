version: '2'
services:
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  message-server:
    container_name: user-server
    build:
      context: docker-user-server
      dockerfile: Dockerfile
    image: user-server:latest
    ports:
      - 18888:8080
    networks:
      - spring-cloud-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres_db:
    image: postgres:latest
    container_name: PostgresCont
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    ports:
      - '5432:5432'
    volumes:
      - postgres_db:/var/lib/postgresql/data
volumes:
    postgres_db:
     driver: local

networks:
  spring-cloud-network:
    driver: bridge
